// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "github.com/smgladkovskiy/file_storage/internal/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// FileStorageRepository is a mock of FileStorageRepository interface.
type FileStorageRepository struct {
	ctrl     *gomock.Controller
	recorder *FileStorageRepositoryMockRecorder
}

// FileStorageRepositoryMockRecorder is the mock recorder for FileStorageRepository.
type FileStorageRepositoryMockRecorder struct {
	mock *FileStorageRepository
}

// NewFileStorageRepository creates a new mock instance.
func NewFileStorageRepository(ctrl *gomock.Controller) *FileStorageRepository {
	mock := &FileStorageRepository{ctrl: ctrl}
	mock.recorder = &FileStorageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FileStorageRepository) EXPECT() *FileStorageRepositoryMockRecorder {
	return m.recorder
}

// GetFileByID mocks base method.
func (m *FileStorageRepository) GetFileByID(ctx context.Context, fileID uuid.UUID) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileByID", ctx, fileID)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileByID indicates an expected call of GetFileByID.
func (mr *FileStorageRepositoryMockRecorder) GetFileByID(ctx, fileID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileByID", reflect.TypeOf((*FileStorageRepository)(nil).GetFileByID), ctx, fileID)
}

// SaveFile mocks base method.
func (m *FileStorageRepository) SaveFile(ctx context.Context, file *entity.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFile", ctx, file)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFile indicates an expected call of SaveFile.
func (mr *FileStorageRepositoryMockRecorder) SaveFile(ctx, file interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*FileStorageRepository)(nil).SaveFile), ctx, file)
}
